generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique(map: "username") @db.VarChar(50)
  password  String    @db.VarChar(255)
  role      String?   @default("user") @db.VarChar(20)
  status    Int?      @default(1) @db.TinyInt
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  @@index([status], map: "idx_status")
  @@index([username], map: "idx_username")
  @@map("t_admin_users")
}

model CardInfo {
  id             BigInt    @id @default(autoincrement())
  wallet         String?   @db.VarChar(100)
  cardType       String?   @map("card_type") @db.VarChar(1)
  cardId         String?   @map("card_id") @db.VarChar(100)
  cardHolderId   String?   @map("card_holder_id") @db.VarChar(100)
  cardBin        String?   @map("card_bin") @db.VarChar(10)
  cardCvv        String?   @map("card_cvv") @db.VarChar(200)
  cardNo         String?   @map("card_no") @db.VarChar(100)
  status         Int?      @db.TinyInt
  cardAmount     Decimal?  @map("card_amount") @db.Decimal(20, 2)
  kycStatus      Int?      @map("kyc_status") @db.TinyInt
  fee            Decimal?  @db.Decimal(20, 2)
  expeireTime    String?   @map("expeire_time") @db.VarChar(50)
  createdAt      DateTime? @map("created_at") @db.Timestamp(0)
  updatedAt      DateTime? @map("updated_at") @db.Timestamp(0)
  remark         String?   @db.VarChar(255)
  crossBorderFee String?   @map("cross_border_fee") @db.VarChar(255)
  transferHash   String?   @map("transfer_hash") @db.VarChar(255)

  @@index([wallet], map: "idx_card_info_wallet")
  @@index([cardId], map: "idx_card_info_card_id")
  @@index([wallet, cardId], map: "idx_card_info_wallet_card_id")
  @@index([wallet, kycStatus], map: "idx_card_info_wallet_kyc_status")
  @@map("t_card_info")
}

model KycAuding {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  wallet       String?   @db.VarChar(100)
  cardId       String?   @map("card_id") @db.VarChar(100)
  cardBin      String?   @map("card_bin") @db.VarChar(100)
  cardHolderId String?   @map("card_holder_id") @db.VarChar(100)
  kycStatus    Int?      @map("kyc_status") @db.TinyInt
  createdAt    DateTime? @map("created_at") @db.Timestamp(0)
  audingAt     DateTime? @map("auding_at") @db.Timestamp(0)
  reason       String?   @db.Text
  updatedAt    DateTime? @map("updated_at") @db.Timestamp(0)
  remark       String?   @db.VarChar(255)
  kycInfoId    Int?      @map("kyc_info_id")

  @@index([wallet, kycStatus], map: "idx_kyc_auding_wallet_kyc_status")
  @@index([wallet, createdAt], map: "idx_kyc_auding_wallet_created_at")
  @@map("t_kyc_auding")
}

model KycInfo {
  id                     Int       @id @default(autoincrement()) @db.UnsignedInt
  wallet                 String?   @db.VarChar(100)
  firstName              String?   @map("first_name") @db.VarChar(20)
  lastName               String?   @map("last_name") @db.VarChar(20)
  email                  String?   @db.VarChar(50)
  mobile                 String?   @db.VarChar(11)
  mobilePrefix           String?   @map("mobile_prefix") @db.VarChar(4)
  dateOfBirth            DateTime? @map("date_of_birth") @db.Date
  certType               String?   @map("cert_type") @db.VarChar(20)
  portrait               String?   @db.VarChar(300)
  reverseSide            String?   @map("reverse_side") @db.VarChar(300)
  nationalityCountryCode String?   @map("nationality_country_code") @db.VarChar(5)
  postCode               String?   @map("post_code") @db.VarChar(10)
  country                String?   @db.VarChar(100)
  state                  String?   @db.VarChar(200)
  city                   String?   @db.VarChar(200)
  address                String?   @db.Text
  createdAt              DateTime? @map("created_at") @db.Timestamp(0)
  updatedAt              DateTime? @map("updated_at") @db.Timestamp(0)
  remark                 String?   @db.VarChar(255)
  person                 String?   @db.VarChar(255)

  @@map("t_kyc_info")
}

model CardAction {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  wallet          String?   @db.VarChar(100)
  cardId          String?   @map("card_id") @db.VarChar(100)
  transferId      String?   @map("transfer_id") @db.VarChar(100)
  transerHash     String?   @map("transer_hash") @db.VarChar(100)
  tradeType       String?   @map("trade_type") @db.VarChar(50)
  amount          Decimal?  @db.Decimal(20, 2)
  settlementFee   Decimal?  @map("settlement_fee") @db.Decimal(20, 2)
  settlementFunds Decimal?  @map("settlement_funds") @db.Decimal(20, 2)
  status          Int?      @db.TinyInt
  createdAt       DateTime? @map("created_at") @db.Timestamp(0)
  updatedAt       DateTime? @map("updated_at") @db.Timestamp(0)
  remark          String?   @db.VarChar(255)
  cardType        String?   @map("card_type") @db.Char(1)

  @@index([wallet, tradeType], map: "idx_wallet_trade_type")
  @@index([wallet, tradeType], map: "idx_card_action_wallet_trade_type")
  @@index([cardId, transferId], map: "idx_card_action_card_id_transfer_id")
  @@index([transferId, status], map: "idx_card_action_transfer_id_status")
  @@index([cardId, wallet], map: "idx_card_action_card_id_wallet")
  @@index([wallet, status], map: "idx_card_action_wallet_status")
  @@map("t_card_action")
}

model t_card_trade_detail {
  id                                  BigInt    @id @default(autoincrement())
  card_id                             String?   @db.LongText
  wallet                              String?   @db.LongText
  start_time                          String?   @db.LongText
  end_time                            String?   @db.LongText
  created_at                          DateTime?
  updated_at                          DateTime?
  transaction_id                      String?   @db.LongText
  origin_transaction_id               String?   @db.LongText
  mask_card_no                        String?   @db.LongText
  transaction_type                    String?   @db.LongText
  status                              String?   @db.LongText
  transaction_currency                String?   @db.LongText
  transaction_amount                  Float?
  merchant_name_location              String?   @db.LongText
  code                                String?   @db.LongText
  msg                                 String?   @db.LongText
  card_type                           String?   @db.LongText
  auth_code                           String?   @db.LongText
  mcc                                 String?   @db.LongText
  card_form_factor                    String?   @db.LongText
  country                             String?   @db.LongText
  member_id                           String?   @db.LongText
  txn_principal_change_account        String?   @db.LongText
  txn_principal_change_currency       String?   @db.LongText
  txn_principal_change_amount         Float?
  txn_principal_change_settled_amount BigInt?
  settle_status                       String?   @db.LongText
  settle_spread_change_account        String?   @db.LongText
  fee_deduction_account               String?   @db.LongText
  fee_deduction_currency              String?   @db.LongText
  fee_deduction_amount                Float?
  fee_return_account                  String?   @db.LongText
  fee_return_currency                 String?   @db.LongText
  fee_return_amount                   Float?
  fee_detail_json                     String?   @db.LongText
  fee_return_detail_json              String?   @db.LongText
}

model t_check_in_log {
  id          Int       @id @default(autoincrement())
  wallet      String?   @db.VarChar(100)
  check_in_at DateTime? @db.Timestamp(0)
  points      Int?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  remark      String?   @db.VarChar(255)
}

model t_pay_req_log {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  wallet          String?   @db.VarChar(100)
  req_url         String?   @db.VarChar(100)
  req_method      String?   @db.VarChar(20)
  req_param       String?   @db.Text
  req_headers     String?   @db.Text
  resp_headers    String?   @db.Text
  response_body   String?   @db.Text
  req_status_code String?   @db.VarChar(20)
  resp_time       Int?
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  remark          String?   @db.VarChar(255)
}

model t_share_card_limit {
  id                          BigInt    @id @default(autoincrement())
  card_id                     String?   @db.LongText
  wallet                      String?   @db.LongText
  start_time                  String?   @db.LongText
  end_time                    String?   @db.LongText
  created_at                  DateTime?
  updated_at                  DateTime?
  transaction_id              String?   @db.LongText
  mask_card_no                String?   @db.LongText
  transaction_type            String?   @db.LongText
  capital_flows               String?   @db.LongText
  txn_limit_method            String?   @db.LongText
  card_currency               String?   @db.LongText
  amount                      Float?
  fee_amount                  Float?
  change_amount               Float?
  available_transaction_limit Float?
  card_form_factor            String?   @db.LongText
  member_id                   String?   @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model t_system_config {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  system_type  String?   @default("wld") @db.VarChar(50)
  config_key   String    @default("0") @db.VarChar(50)
  config_value String    @db.Text
  status       Int?
  created_at   DateTime  @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
  updater      String?   @db.VarChar(50)
  remark       String?   @db.VarChar(255)

  @@index([system_type, config_key], map: "idx_system_config_type_key")
}

model t_system_file {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  wallet     String?   @db.VarChar(100)
  biz_type   String?   @db.VarChar(50)
  biz_id     Int?
  url        String?   @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  remark     String?   @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model t_transaction_flow {
  id            BigInt    @id @default(autoincrement())
  wallet        String    @db.VarChar(64)
  card_id       String?   @db.VarChar(255)
  txn_type      String    @db.VarChar(32)
  txn_amount    Decimal   @db.Decimal(20, 2)
  balance_after Decimal   @db.Decimal(20, 2)
  reference_id  String?   @db.VarChar(255)
  currency      String?   @default("USDT") @db.VarChar(16)
  remark        String?   @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.DateTime(0)

  @@index([created_at], map: "idx_created_at")
  @@index([txn_type], map: "idx_txn_type")
  @@index([wallet], map: "idx_wallet")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model t_user_check_in_info {
  id                 Int       @id @default(autoincrement())
  wallet             String?   @db.VarChar(255)
  check_in_total_day Int?
  total_points       Int?
  has_reward         Int?
  is_reward          Int?      @db.TinyInt
  next_claim_time    DateTime? @db.Timestamp(0)
  reward_time        DateTime? @db.Timestamp(0)
  reward_type        Int?
  created_at         DateTime? @db.Timestamp(0)
  updated_at         DateTime? @db.DateTime(0)
  remark             String?   @db.VarChar(255)

  @@index([wallet], map: "idx_user_check_in_wallet")
  @@index([wallet, next_claim_time], map: "idx_user_check_in_wallet_next_claim_time")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model t_user_info {
  id            Int       @id @default(autoincrement())
  wallet        String?   @db.VarChar(100)
  user_name     String?   @db.VarChar(50)
  img_url       String?   @db.VarChar(255)
  email         String?   @db.VarChar(100)
  mobile        String?   @db.VarChar(12)
  mobile_prefix String?   @db.VarChar(4)
  language      String?   @db.VarChar(10)
  ip            String?   @db.VarChar(100)
  country       String?   @db.VarChar(20)
  source        String?   @db.VarChar(50)
  device_type   String?   @db.VarChar(20)
  status        Int?      @db.TinyInt
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  remark        String?   @db.VarChar(255)
  kyc_status    Int?      @db.TinyInt
  tips          Int?

  @@index([wallet], map: "idx_user_info_wallet")
  @@index([wallet, kyc_status], map: "idx_user_info_wallet_kyc_status")
}
